/**
 * This class is generated by jOOQ
 */
package generated.tables;


import generated.Keys;
import generated.Public;
import generated.tables.records.CombinationRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.math.BigDecimal;
import java.sql.Time;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Combination extends TableImpl<CombinationRecord> {

	private static final long serialVersionUID = 1140147516;

	/**
	 * The reference instance of <code>public.combination</code>
	 */
	public static final Combination COMBINATION = new Combination();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CombinationRecord> getRecordType() {
		return CombinationRecord.class;
	}

	/**
	 * The column <code>public.combination.id</code>.
	 */
	public final TableField<CombinationRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.combination.uploaded</code>.
	 */
	public final TableField<CombinationRecord, Time> UPLOADED = createField("uploaded", org.jooq.impl.SQLDataType.TIME.defaulted(true), this, "");

	/**
	 * The column <code>public.combination.merchant</code>.
	 */
	public final TableField<CombinationRecord, String> MERCHANT = createField("merchant", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>public.combination.amount</code>.
	 */
	public final TableField<CombinationRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.DECIMAL.precision(12, 2), this, "");

	/**
	 * The column <code>public.combination.tag</code>.
	 */
	public final TableField<CombinationRecord, String> TAG = createField("tag", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * Create a <code>public.combination</code> table reference
	 */
	public Combination() {
		this("combination", null);
	}

	/**
	 * Create an aliased <code>public.combination</code> table reference
	 */
	public Combination(String alias) {
		this(alias, COMBINATION);
	}

	private Combination(String alias, Table<CombinationRecord> aliased) {
		this(alias, aliased, null);
	}

	private Combination(String alias, Table<CombinationRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<CombinationRecord, Integer> getIdentity() {
		return Keys.IDENTITY_COMBINATION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Combination as(String alias) {
		return new Combination(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Combination rename(String name) {
		return new Combination(name, null);
	}
}
